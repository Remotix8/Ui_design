{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBC15\\uC131\\uC5B8\\\\Documents\\\\Projects\\\\Ui_design\\\\react_design\\\\src\\\\components\\\\RegisterModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LoginModal.css'; // 스타일 재사용\nimport logo from '../assets/images/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterModal({\n  onClose,\n  onSwitchToLogin\n}) {\n  _s();\n  const [newId, setNewId] = useState('');\n  const [newPw, setNewPw] = useState('');\n  const [confirmPw, setConfirmPw] = useState('');\n  const [companyCode, setCompanyCode] = useState('');\n  const handleRegister = () => {\n    if (newId === '2') {\n      alert('이미 등록된 아이디입니다.');\n      return;\n    }\n    if (newPw !== confirmPw) {\n      alert('비밀번호 확인이 일치하지 않습니다.');\n      return;\n    }\n    if (companyCode !== '4') {\n      alert('회사코드가 틀렸습니다.');\n      return;\n    }\n    alert('회원가입이 완료되었습니다.');\n    onSwitchToLogin(); // 로그인 창으로 전환\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-modal\",\n      style: {\n        width: '380px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"login-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC2E0\\uADDC \\uC544\\uC774\\uB514\",\n        value: newId,\n        onChange: e => setNewId(e.target.value),\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uC2E0\\uADDC \\uBE44\\uBC00\\uBC88\\uD638\",\n        value: newPw,\n        onChange: e => setNewPw(e.target.value),\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        value: confirmPw,\n        onChange: e => setConfirmPw(e.target.value),\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uD68C\\uC0AC \\uCF54\\uB4DC\",\n        value: companyCode,\n        onChange: e => setCompanyCode(e.target.value),\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        className: \"login-button\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onSwitchToLogin,\n        children: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterModal, \"AlUyiLcQe1cFE4y9xNJ09DDrI7s=\");\n_c = RegisterModal;\nexport default RegisterModal;\nvar _c;\n$RefreshReg$(_c, \"RegisterModal\");","map":{"version":3,"names":["React","useState","logo","jsxDEV","_jsxDEV","RegisterModal","onClose","onSwitchToLogin","_s","newId","setNewId","newPw","setNewPw","confirmPw","setConfirmPw","companyCode","setCompanyCode","handleRegister","alert","className","children","style","width","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/박성언/Documents/Projects/Ui_design/react_design/src/components/RegisterModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './LoginModal.css'; // 스타일 재사용\r\nimport logo from '../assets/images/logo.png';\r\n\r\nfunction RegisterModal({ onClose, onSwitchToLogin }) {\r\n  const [newId, setNewId] = useState('');\r\n  const [newPw, setNewPw] = useState('');\r\n  const [confirmPw, setConfirmPw] = useState('');\r\n  const [companyCode, setCompanyCode] = useState('');\r\n\r\n  const handleRegister = () => {\r\n    if (newId === '2') {\r\n      alert('이미 등록된 아이디입니다.');\r\n      return;\r\n    }\r\n    if (newPw !== confirmPw) {\r\n      alert('비밀번호 확인이 일치하지 않습니다.');\r\n      return;\r\n    }\r\n    if (companyCode !== '4') {\r\n      alert('회사코드가 틀렸습니다.');\r\n      return;\r\n    }\r\n\r\n    alert('회원가입이 완료되었습니다.');\r\n    onSwitchToLogin(); // 로그인 창으로 전환\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-modal-overlay\">\r\n      <div className=\"login-modal\" style={{ width: '380px' }}>\r\n        <img src={logo} alt=\"Logo\" className=\"login-logo\" />\r\n        <h2 className=\"login-title\">회원가입</h2>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"신규 아이디\"\r\n          value={newId}\r\n          onChange={(e) => setNewId(e.target.value)}\r\n          className=\"login-input\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"신규 비밀번호\"\r\n          value={newPw}\r\n          onChange={(e) => setNewPw(e.target.value)}\r\n          className=\"login-input\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"비밀번호 확인\"\r\n          value={confirmPw}\r\n          onChange={(e) => setConfirmPw(e.target.value)}\r\n          className=\"login-input\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"회사 코드\"\r\n          value={companyCode}\r\n          onChange={(e) => setCompanyCode(e.target.value)}\r\n          className=\"login-input\"\r\n        />\r\n\r\n        <button onClick={handleRegister} className=\"login-button\">\r\n          회원가입\r\n        </button>\r\n        \r\n        <button className=\"close-button\" onClick={onSwitchToLogin}>로그인하기</button>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}