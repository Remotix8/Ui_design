{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\Ui_design\\\\react_design\\\\src\\\\components\\\\StreamPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport ROSLIB from 'roslib';\nimport './StreamPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StreamPanel = ({\n  selectedCustomer\n}) => {\n  _s();\n  const [recognitionPerson, setRecognitionPerson] = useState('고객명: --');\n  const [recognitionCar, setRecognitionCar] = useState('차량모델: --');\n  const [recognitionTime, setRecognitionTime] = useState('연결시간: --');\n  const [isStreaming, setIsStreaming] = useState(false);\n  const imageRef = useRef(null);\n\n  // 선택된 고객 정보가 변경될 때만 UI 업데이트\n  useEffect(() => {\n    if (selectedCustomer) {\n      setRecognitionPerson('고객명: ' + selectedCustomer.name);\n      setRecognitionCar('차량모델: ' + selectedCustomer.model);\n      setRecognitionTime('연결시간: ' + selectedCustomer.timestamp);\n    } else {\n      setRecognitionPerson('고객명: --');\n      setRecognitionCar('차량모델: --');\n      setRecognitionTime('연결시간: --');\n    }\n  }, [selectedCustomer]);\n  useEffect(() => {\n    // 고객이 선택되지 않았다면 스트리밍을 시작하지 않음\n    if (!selectedCustomer) {\n      setIsStreaming(false);\n      return;\n    }\n    setIsStreaming(false);\n    const ros = new ROSLIB.Ros({\n      url: 'ws://172.16.131.93:9090'\n    });\n    ros.on('connection', () => {\n      console.log('Connected to websocket server.');\n      setIsStreaming(true);\n    });\n    ros.on('error', error => {\n      console.error('Error connecting to websocket server:', error);\n      setIsStreaming(false);\n    });\n    ros.on('close', () => {\n      console.warn('Connection to websocket server closed.');\n      setIsStreaming(false);\n    });\n    const cameraTopic = new ROSLIB.Topic({\n      ros,\n      name: '/camera/image_raw/compressed',\n      messageType: 'sensor_msgs/CompressedImage'\n    });\n    cameraTopic.subscribe(message => {\n      if (imageRef.current) {\n        const imageData = `data:image/jpeg;base64,${message.data}`;\n        imageRef.current.src = imageData;\n      }\n    });\n    return () => {\n      cameraTopic.unsubscribe();\n      ros.close();\n    };\n  }, [selectedCustomer]); // selectedCustomer를 의존성 배열에 추가\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stream-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stream-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"panel-title\",\n        children: \"Webcam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cameras-container\",\n        children: selectedCustomer ? isStreaming ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-feed\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            ref: imageRef,\n            alt: \"Camera Feed\",\n            onError: () => setIsStreaming(false),\n            className: \"camera-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uCE74\\uBA54\\uB77C \\uC2A4\\uD2B8\\uB9BC \\uC5F0\\uACB0 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD604\\uC7AC \\uACE0\\uAC1D\\uACFC \\uC5F0\\uACB0 \\uB300\\uAE30\\uC911\\uC785\\uB2C8\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recognition-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recognition-person\",\n        children: recognitionPerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recognition-car\",\n        children: recognitionCar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recognition-time\",\n        children: recognitionTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(StreamPanel, \"U7/gq/PH8eufmMq2iKyPlOxF+5Y=\");\n_c = StreamPanel;\nexport default StreamPanel;\nvar _c;\n$RefreshReg$(_c, \"StreamPanel\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ROSLIB","jsxDEV","_jsxDEV","StreamPanel","selectedCustomer","_s","recognitionPerson","setRecognitionPerson","recognitionCar","setRecognitionCar","recognitionTime","setRecognitionTime","isStreaming","setIsStreaming","imageRef","name","model","timestamp","ros","Ros","url","on","console","log","error","warn","cameraTopic","Topic","messageType","subscribe","message","current","imageData","data","src","unsubscribe","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","alt","onError","_c","$RefreshReg$"],"sources":["C:/git/Ui_design/react_design/src/components/StreamPanel.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport ROSLIB from 'roslib';\r\nimport './StreamPanel.css';\r\n\r\nconst StreamPanel = ({ selectedCustomer }) => {\r\n  const [recognitionPerson, setRecognitionPerson] = useState('고객명: --');\r\n  const [recognitionCar, setRecognitionCar] = useState('차량모델: --');\r\n  const [recognitionTime, setRecognitionTime] = useState('연결시간: --');\r\n  const [isStreaming, setIsStreaming] = useState(false);\r\n  const imageRef = useRef(null);\r\n\r\n  // 선택된 고객 정보가 변경될 때만 UI 업데이트\r\n  useEffect(() => {\r\n    if (selectedCustomer) {\r\n      setRecognitionPerson('고객명: ' + selectedCustomer.name);\r\n      setRecognitionCar('차량모델: ' + selectedCustomer.model);\r\n      setRecognitionTime('연결시간: ' + selectedCustomer.timestamp);\r\n    } else {\r\n      setRecognitionPerson('고객명: --');\r\n      setRecognitionCar('차량모델: --');\r\n      setRecognitionTime('연결시간: --');\r\n    }\r\n  }, [selectedCustomer]);\r\n\r\n  useEffect(() => {\r\n    // 고객이 선택되지 않았다면 스트리밍을 시작하지 않음\r\n    if (!selectedCustomer) {\r\n      setIsStreaming(false);\r\n      return;\r\n    }\r\n\r\n    setIsStreaming(false);\r\n    const ros = new ROSLIB.Ros({ url: 'ws://172.16.131.93:9090' });\r\n\r\n    ros.on('connection', () => {\r\n      console.log('Connected to websocket server.');\r\n      setIsStreaming(true);\r\n    });\r\n    \r\n    ros.on('error', (error) => {\r\n      console.error('Error connecting to websocket server:', error);\r\n      setIsStreaming(false);\r\n    });\r\n    \r\n    ros.on('close', () => {\r\n      console.warn('Connection to websocket server closed.');\r\n      setIsStreaming(false);\r\n    });\r\n\r\n    const cameraTopic = new ROSLIB.Topic({\r\n      ros,\r\n      name: '/camera/image_raw/compressed',\r\n      messageType: 'sensor_msgs/CompressedImage'\r\n    });\r\n\r\n    cameraTopic.subscribe((message) => {\r\n      if (imageRef.current) {\r\n        const imageData = `data:image/jpeg;base64,${message.data}`;\r\n        imageRef.current.src = imageData;\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      cameraTopic.unsubscribe();\r\n      ros.close();\r\n    };\r\n  }, [selectedCustomer]); // selectedCustomer를 의존성 배열에 추가\r\n\r\n  return (\r\n    <div className=\"stream-container\">\r\n      <div className=\"stream-panel\">\r\n        <h2 className=\"panel-title\">Webcam</h2>\r\n        <div className=\"cameras-container\">\r\n          {selectedCustomer ? (\r\n            isStreaming ? (\r\n              <div className=\"camera-feed\">\r\n                <img\r\n                  ref={imageRef}\r\n                  alt=\"Camera Feed\"\r\n                  onError={() => setIsStreaming(false)}\r\n                  className=\"camera-image\"\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"camera-placeholder\">\r\n                <p>카메라 스트림 연결 중...</p>\r\n              </div>\r\n            )\r\n          ) : (\r\n            <div className=\"camera-placeholder\">\r\n              <p>현재 고객과 연결 대기중입니다</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"divider\"></div>\r\n      <div className=\"recognition-info\">\r\n        <div className=\"recognition-person\">{recognitionPerson}</div>\r\n        <div className=\"recognition-car\">{recognitionCar}</div>\r\n        <div className=\"recognition-time\">{recognitionTime}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StreamPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}