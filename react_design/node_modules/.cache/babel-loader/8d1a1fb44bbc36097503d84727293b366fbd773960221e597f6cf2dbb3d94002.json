{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\Ui_design\\\\react_design\\\\src\\\\components\\\\BatteryPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './BatteryPanel.css';\nimport { FaBatteryThreeQuarters } from 'react-icons/fa';\nimport ROSLIB from 'roslib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BatteryPanel = () => {\n  _s();\n  const [batteryPercentage, setBatteryPercentage] = useState('--');\n  useEffect(() => {\n    // Create a connection to the ROS server\n    const ros = new ROSLIB.Ros({\n      url: 'ws://172.16.131.93:9090'\n    });\n    ros.on('connection', () => {\n      console.log('Connected to websocket server.');\n    });\n    ros.on('error', error => {\n      console.log('Error connecting to websocket server:', error);\n      setBatteryPercentage('--');\n    });\n    ros.on('close', () => {\n      console.log('Connection to websocket server closed.');\n      setBatteryPercentage('--');\n    });\n\n    // Subscribe to the battery state topic\n    const batteryTopic = new ROSLIB.Topic({\n      ros: ros,\n      name: '/battery_state',\n      messageType: 'sensor_msgs/BatteryState'\n    });\n    batteryTopic.subscribe(message => {\n      setBatteryPercentage(`${Math.round(message.percentage)}%`);\n    });\n\n    // Cleanup subscription on component unmount\n    return () => {\n      batteryTopic.unsubscribe();\n      ros.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"battery-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battery-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battery-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battery-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"battery-label\",\n            children: \"Battery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"battery-percentage\",\n            children: batteryPercentage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battery-icon\",\n          children: /*#__PURE__*/_jsxDEV(FaBatteryThreeQuarters, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(BatteryPanel, \"UMjwbjsO4MMx1Jpovtm71ne72sA=\");\n_c = BatteryPanel;\nexport default BatteryPanel;\nvar _c;\n$RefreshReg$(_c, \"BatteryPanel\");","map":{"version":3,"names":["React","useState","useEffect","FaBatteryThreeQuarters","ROSLIB","jsxDEV","_jsxDEV","BatteryPanel","_s","batteryPercentage","setBatteryPercentage","ros","Ros","url","on","console","log","error","batteryTopic","Topic","name","messageType","subscribe","message","Math","round","percentage","unsubscribe","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/git/Ui_design/react_design/src/components/BatteryPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './BatteryPanel.css';\r\nimport { FaBatteryThreeQuarters } from 'react-icons/fa';\r\nimport ROSLIB from 'roslib';\r\n\r\nconst BatteryPanel = () => {\r\n  const [batteryPercentage, setBatteryPercentage] = useState('--');\r\n\r\n  useEffect(() => {\r\n    // Create a connection to the ROS server\r\n    const ros = new ROSLIB.Ros({\r\n      url: 'ws://172.16.131.93:9090'\r\n    });\r\n\r\n    ros.on('connection', () => {\r\n      console.log('Connected to websocket server.');\r\n    });\r\n\r\n    ros.on('error', (error) => {\r\n      console.log('Error connecting to websocket server:', error);\r\n      setBatteryPercentage('--');\r\n    });\r\n\r\n    ros.on('close', () => {\r\n      console.log('Connection to websocket server closed.');\r\n      setBatteryPercentage('--');\r\n    });\r\n\r\n    // Subscribe to the battery state topic\r\n    const batteryTopic = new ROSLIB.Topic({\r\n      ros: ros,\r\n      name: '/battery_state',\r\n      messageType: 'sensor_msgs/BatteryState'\r\n    });\r\n\r\n    batteryTopic.subscribe((message) => {\r\n      setBatteryPercentage(`${Math.round(message.percentage)}%`);\r\n    });\r\n\r\n    // Cleanup subscription on component unmount\r\n    return () => {\r\n      batteryTopic.unsubscribe();\r\n      ros.close();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"battery-container\">\r\n      <div className=\"battery-panel\">\r\n        <div className=\"battery-content\">\r\n          <div className=\"battery-info\">\r\n            <span className=\"battery-label\">Battery</span>\r\n            <div className=\"battery-percentage\">{batteryPercentage}</div>\r\n          </div>\r\n          <div className=\"battery-icon\">\r\n            <FaBatteryThreeQuarters />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BatteryPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}