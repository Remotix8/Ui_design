{"ast":null,"code":"var _jsxFileName = \"/root/web_interface/src/components/TopBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { IoSettingsOutline } from 'react-icons/io5';\nimport { MdDarkMode, MdLightMode } from 'react-icons/md';\nimport { useTheme } from '../context/ThemeContext';\nimport './TopBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopBar = () => {\n  _s();\n  const [showSettings, setShowSettings] = useState(false);\n  const {\n    isDarkMode,\n    toggleDarkMode\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: \"KIRO FMS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"settings-button\",\n        onClick: () => setShowSettings(!showSettings),\n        children: /*#__PURE__*/_jsxDEV(IoSettingsOutline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-menu\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"theme-toggle\",\n          onClick: toggleDarkMode,\n          children: [isDarkMode ? /*#__PURE__*/_jsxDEV(MdLightMode, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(MdDarkMode, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: isDarkMode ? 'Light Mode' : 'Dark Mode'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(TopBar, \"DUoIwi5xXRwnkIjb3cF1+NWzeB0=\", false, function () {\n  return [useTheme];\n});\n_c = TopBar;\nexport default TopBar;\nvar _c;\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"names":["React","useState","IoSettingsOutline","MdDarkMode","MdLightMode","useTheme","jsxDEV","_jsxDEV","TopBar","_s","showSettings","setShowSettings","isDarkMode","toggleDarkMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/root/web_interface/src/components/TopBar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { IoSettingsOutline } from 'react-icons/io5';\nimport { MdDarkMode, MdLightMode } from 'react-icons/md';\nimport { useTheme } from '../context/ThemeContext';\nimport './TopBar.css';\n\nconst TopBar = () => {\n  const [showSettings, setShowSettings] = useState(false);\n  const { isDarkMode, toggleDarkMode } = useTheme();\n\n  return (\n    <div className=\"top-bar\">\n      <div className=\"logo\">KIRO FMS</div>\n      <div className=\"settings-container\">\n        <button \n          className=\"settings-button\"\n          onClick={() => setShowSettings(!showSettings)}\n        >\n          <IoSettingsOutline />\n        </button>\n        {showSettings && (\n          <div className=\"settings-menu\">\n            <button \n              className=\"theme-toggle\"\n              onClick={toggleDarkMode}\n            >\n              {isDarkMode ? <MdLightMode /> : <MdDarkMode />}\n              <span>{isDarkMode ? 'Light Mode' : 'Dark Mode'}</span>\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TopBar; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,iBAAiB,QAAQ,iBAAiB;AACnD,SAASC,UAAU,EAAEC,WAAW,QAAQ,gBAAgB;AACxD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM;IAAEW,UAAU;IAAEC;EAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAEjD,oBACEE,OAAA;IAAKO,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBR,OAAA;MAAKO,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpCZ,OAAA;MAAKO,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCR,OAAA;QACEO,SAAS,EAAC,iBAAiB;QAC3BM,OAAO,EAAEA,CAAA,KAAMT,eAAe,CAAC,CAACD,YAAY,CAAE;QAAAK,QAAA,eAE9CR,OAAA,CAACL,iBAAiB;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,EACRT,YAAY,iBACXH,OAAA;QAAKO,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BR,OAAA;UACEO,SAAS,EAAC,cAAc;UACxBM,OAAO,EAAEP,cAAe;UAAAE,QAAA,GAEvBH,UAAU,gBAAGL,OAAA,CAACH,WAAW;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGZ,OAAA,CAACJ,UAAU;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9CZ,OAAA;YAAAQ,QAAA,EAAOH,UAAU,GAAG,YAAY,GAAG;UAAW;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACV,EAAA,CA5BID,MAAM;EAAA,QAE6BH,QAAQ;AAAA;AAAAgB,EAAA,GAF3Cb,MAAM;AA8BZ,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}