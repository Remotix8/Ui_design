{"ast":null,"code":"var _jsxFileName = \"/Users/junha/workspace/3\\uD559\\uB144 \\uACFC\\uBAA9/\\uC18C\\uD504\\uD2B8\\uC6E8\\uC5B4 \\uACF5\\uD559/Ui_design/react_design/src/contexts/ROSContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport ROSLIB from 'roslib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROSContext = /*#__PURE__*/createContext(null);\nexport const ROSProvider = ({\n  children\n}) => {\n  _s();\n  const [ros, setRos] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  useEffect(() => {\n    // Create ROS connection\n    const rosInstance = new ROSLIB.Ros({\n      url: 'ws://172.16.131.93:9090'\n    });\n    rosInstance.on('connection', () => {\n      console.log('Connected to ROS websocket server');\n      setConnectionStatus('connected');\n    });\n    rosInstance.on('error', error => {\n      console.error('Error connecting to ROS websocket server:', error);\n      setConnectionStatus('error');\n    });\n    rosInstance.on('close', () => {\n      console.log('Connection to ROS websocket server closed');\n      setConnectionStatus('disconnected');\n    });\n    setRos(rosInstance);\n\n    // Cleanup on unmount\n    return () => {\n      if (rosInstance) {\n        rosInstance.close();\n      }\n    };\n  }, []);\n  const createTopic = (topicName, messageType) => {\n    if (!ros) return null;\n    return new ROSLIB.Topic({\n      ros: ros,\n      name: topicName,\n      messageType: messageType\n    });\n  };\n  const value = {\n    ros,\n    connectionStatus,\n    createTopic\n  };\n  return /*#__PURE__*/_jsxDEV(ROSContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ROSProvider, \"riR8USwkKLUHKTuBwFbJBj7DSqI=\");\n_c = ROSProvider;\nexport const useROS = () => {\n  _s2();\n  const context = useContext(ROSContext);\n  if (!context) {\n    throw new Error('useROS must be used within a ROSProvider');\n  }\n  return context;\n};\n_s2(useROS, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ROSProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","ROSLIB","jsxDEV","_jsxDEV","ROSContext","ROSProvider","children","_s","ros","setRos","connectionStatus","setConnectionStatus","rosInstance","Ros","url","on","console","log","error","close","createTopic","topicName","messageType","Topic","name","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useROS","_s2","context","Error","$RefreshReg$"],"sources":["/Users/junha/workspace/3학년 과목/소프트웨어 공학/Ui_design/react_design/src/contexts/ROSContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport ROSLIB from 'roslib';\n\nconst ROSContext = createContext(null);\n\nexport const ROSProvider = ({ children }) => {\n  const [ros, setRos] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n\n  useEffect(() => {\n    // Create ROS connection\n    const rosInstance = new ROSLIB.Ros({\n      url: 'ws://172.16.131.93:9090'\n    });\n\n    rosInstance.on('connection', () => {\n      console.log('Connected to ROS websocket server');\n      setConnectionStatus('connected');\n    });\n\n    rosInstance.on('error', (error) => {\n      console.error('Error connecting to ROS websocket server:', error);\n      setConnectionStatus('error');\n    });\n\n    rosInstance.on('close', () => {\n      console.log('Connection to ROS websocket server closed');\n      setConnectionStatus('disconnected');\n    });\n\n    setRos(rosInstance);\n\n    // Cleanup on unmount\n    return () => {\n      if (rosInstance) {\n        rosInstance.close();\n      }\n    };\n  }, []);\n\n  const createTopic = (topicName, messageType) => {\n    if (!ros) return null;\n    return new ROSLIB.Topic({\n      ros: ros,\n      name: topicName,\n      messageType: messageType\n    });\n  };\n\n  const value = {\n    ros,\n    connectionStatus,\n    createTopic\n  };\n\n  return (\n    <ROSContext.Provider value={value}>\n      {children}\n    </ROSContext.Provider>\n  );\n};\n\nexport const useROS = () => {\n  const context = useContext(ROSContext);\n  if (!context) {\n    throw new Error('useROS must be used within a ROSProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,UAAU,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAEtC,OAAO,MAAMQ,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,cAAc,CAAC;EAExED,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,WAAW,GAAG,IAAIX,MAAM,CAACY,GAAG,CAAC;MACjCC,GAAG,EAAE;IACP,CAAC,CAAC;IAEFF,WAAW,CAACG,EAAE,CAAC,YAAY,EAAE,MAAM;MACjCC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChDN,mBAAmB,CAAC,WAAW,CAAC;IAClC,CAAC,CAAC;IAEFC,WAAW,CAACG,EAAE,CAAC,OAAO,EAAGG,KAAK,IAAK;MACjCF,OAAO,CAACE,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACjEP,mBAAmB,CAAC,OAAO,CAAC;IAC9B,CAAC,CAAC;IAEFC,WAAW,CAACG,EAAE,CAAC,OAAO,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MACxDN,mBAAmB,CAAC,cAAc,CAAC;IACrC,CAAC,CAAC;IAEFF,MAAM,CAACG,WAAW,CAAC;;IAEnB;IACA,OAAO,MAAM;MACX,IAAIA,WAAW,EAAE;QACfA,WAAW,CAACO,KAAK,CAAC,CAAC;MACrB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAACC,SAAS,EAAEC,WAAW,KAAK;IAC9C,IAAI,CAACd,GAAG,EAAE,OAAO,IAAI;IACrB,OAAO,IAAIP,MAAM,CAACsB,KAAK,CAAC;MACtBf,GAAG,EAAEA,GAAG;MACRgB,IAAI,EAAEH,SAAS;MACfC,WAAW,EAAEA;IACf,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,KAAK,GAAG;IACZjB,GAAG;IACHE,gBAAgB;IAChBU;EACF,CAAC;EAED,oBACEjB,OAAA,CAACC,UAAU,CAACsB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAC/BA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACvB,EAAA,CAvDWF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAyDxB,OAAO,MAAM2B,MAAM,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC1B,MAAMC,OAAO,GAAGpC,UAAU,CAACM,UAAU,CAAC;EACtC,IAAI,CAAC8B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EAC7D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,MAAM;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}