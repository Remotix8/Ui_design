{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBC15\\uC131\\uC5B8\\\\Documents\\\\Projects\\\\Ui_design\\\\react_design\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation';\nimport SettingsModal from './components/SettingsModal';\nimport StreamPanel from './components/StreamPanel';\nimport TopicPanel from './components/TopicPanel';\nimport BatteryPanel from './components/BatteryPanel';\nimport SpeedPanel from './components/SpeedPanel';\nimport PlatformControlPanel from './components/PlatformControlPanel';\nimport LoginModal from './components/LoginModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 설정 모달 오픈 상태 관리\n  const [isSettingsOpen, setSettingsOpen] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n  const [userId, setUserId] = useState('');\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      onOpenSettings: () => setSettingsOpen(true),\n      isLogin: isLogin,\n      userId: userId,\n      onLoginClick: () => setShowLoginModal(true),\n      onLogout: () => {\n        setIsLogin(false);\n        setUserId('');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), showLoginModal && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"global-lock-screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginModal, {\n        onClose: () => setShowLoginModal(false),\n        onLogin: id => {\n          setIsLogin(true);\n          setUserId(id);\n          setShowLoginModal(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(StreamPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopicPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BatteryPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpeedPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlatformControlPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isSettingsOpen && /*#__PURE__*/_jsxDEV(SettingsModal, {\n      onClose: () => setSettingsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7T3iIM91t9MTAFKaoP4jHulq9tE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navigation","SettingsModal","StreamPanel","TopicPanel","BatteryPanel","SpeedPanel","PlatformControlPanel","LoginModal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isSettingsOpen","setSettingsOpen","isLogin","setIsLogin","userId","setUserId","showLoginModal","setShowLoginModal","className","children","onOpenSettings","onLoginClick","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onLogin","id","_c","$RefreshReg$"],"sources":["C:/Users/박성언/Documents/Projects/Ui_design/react_design/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Navigation from './components/Navigation';\r\nimport SettingsModal from './components/SettingsModal';\r\nimport StreamPanel from './components/StreamPanel';\r\nimport TopicPanel from './components/TopicPanel';\r\nimport BatteryPanel from './components/BatteryPanel';\r\nimport SpeedPanel from './components/SpeedPanel';\r\nimport PlatformControlPanel from './components/PlatformControlPanel';\r\nimport LoginModal from './components/LoginModal';\r\n\r\nfunction App() {\r\n  // 설정 모달 오픈 상태 관리\r\n  const [isSettingsOpen, setSettingsOpen] = useState(false);\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [userId, setUserId] = useState('');\r\n  const [showLoginModal, setShowLoginModal] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      \r\n\r\n      {/* 네비게이션에 onOpenSettings prop 전달 */}\r\n      <Navigation \r\n      onOpenSettings={() => setSettingsOpen(true)}\r\n      isLogin={isLogin}\r\n        userId={userId}\r\n        onLoginClick={() => setShowLoginModal(true)}\r\n        onLogout={() => {\r\n          setIsLogin(false);\r\n          setUserId('');\r\n        }}\r\n      />\r\n\r\n      {/* 로그인 모달 */}\r\n      {showLoginModal && (\r\n        <>\r\n        <div className=\"global-lock-screen\"></div>\r\n\r\n        \r\n        <LoginModal\r\n          onClose={() => setShowLoginModal(false)}\r\n          onLogin={(id) => {\r\n            setIsLogin(true);\r\n            setUserId(id);\r\n            setShowLoginModal(false);\r\n          }}\r\n        />\r\n        </>\r\n      )}\r\n      \r\n\r\n      {/* 각 패널 컴포넌트 */}\r\n      <StreamPanel />\r\n      <TopicPanel />\r\n      <BatteryPanel />\r\n      <SpeedPanel />\r\n      <PlatformControlPanel />\r\n\r\n      {/* 설정 모달 조건부 렌더링 */}\r\n      {isSettingsOpen && (\r\n        <SettingsModal onClose={() => setSettingsOpen(false)} />\r\n      )}\r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}