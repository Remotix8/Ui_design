{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\Ui_design\\\\react_design\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation';\nimport SettingsModal from './components/SettingsModal';\nimport LoginModal from './components/LoginModal';\nimport RegisterModal from './components/RegisterModal';\nimport ProfilePopup from './components/ProfilePopup';\nimport Clock from './components/Clock';\nimport CustomerQueueList from './components/CustomerQueueList';\nimport StreamPanel from './components/StreamPanel';\nimport TopicPanel from './components/TopicPanel';\nimport BatteryPanel from './components/BatteryPanel';\nimport SpeedPanel from './components/SpeedPanel';\nimport PlatformControlPanel from './components/PlatformControlPanel';\nimport ReportModal from \"./components/Report\";\nimport ReportCard from './components/ReportCard';\nimport NotificationCard from './components/ReportsPanel';\nimport ReportsPanel from './components/ReportsPanel';\nimport axios from 'axios';\nimport ROSLIB from 'roslib';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isSettingsOpen, setSettingsOpen] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n  const [userId, setUserId] = useState('');\n  const [showLoginModal, setShowLoginModal] = useState(true);\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\n  const [showProfilePopup, setShowProfilePopup] = useState(false);\n  const profileUrl = \"/assets/images/sample_profile.png\";\n  const [selectedReport, setSelectedReport] = useState(null);\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [refreshTrigger, setRefreshTrigger] = useState(0); // 새로고침 트리거용 state\n\n  // ROS 연결 및 토픽 구독\n  useEffect(() => {\n    const ros = new ROSLIB.Ros({\n      url: 'ws://172.16.131.93:9090'\n    });\n    ros.on('connection', () => {\n      console.log('Connected to ROS websocket server.');\n\n      // JSON 데이터 토픽 구독\n      const jsonTopic = new ROSLIB.Topic({\n        ros: ros,\n        name: '/json_data',\n        messageType: 'std_msgs/String'\n      });\n      jsonTopic.subscribe(message => {\n        try {\n          // 토픽에서 받은 JSON 문자열 파싱\n          const jsonData = JSON.parse(message.data);\n          console.log('Received JSON data:', jsonData);\n\n          // 고유 ID 생성\n          const customerId = Date.now();\n\n          // 새 고객 추가 (큐의 끝에 추가)\n          setCustomers(prevCustomers => {\n            const newCustomers = [...prevCustomers, {\n              id: customerId,\n              name: jsonData.name,\n              region: jsonData.region,\n              model: jsonData.model,\n              timestamp: jsonData.timestamp\n            }];\n\n            // 최대 10명까지만 유지\n            return newCustomers.slice(-10);\n          });\n        } catch (error) {\n          console.error('Error parsing JSON data:', error);\n        }\n      });\n    });\n    ros.on('error', error => {\n      console.error('Error connecting to ROS websocket server:', error);\n    });\n    ros.on('close', () => {\n      console.warn('Connection to ROS websocket server closed.');\n    });\n    return () => {\n      if (ros) {\n        ros.close();\n      }\n    };\n  }, []);\n\n  // 토큰 확인 및 자동 로그인\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const savedUserId = localStorage.getItem('user');\n    if (token && savedUserId) {\n      setIsLogin(true);\n      setUserId(savedUserId);\n      setShowLoginModal(false);\n    }\n  }, []);\n\n  // axios 인터셉터 설정\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, []);\n  const handleLogin = username => {\n    console.log('로그인 시도:', username);\n    setIsLogin(true);\n    setUserId(username);\n    setShowLoginModal(false);\n    console.log('로그인 상태:', {\n      isLogin: true,\n      userId: username\n    });\n  };\n  const handleLogout = () => {\n    setIsLogin(false);\n    setUserId('');\n    localStorage.removeItem('token');\n    localStorage.removeItem('token_type');\n    localStorage.removeItem('user');\n    setShowLoginModal(true);\n  };\n\n  // 고객 연결 시 실행될 콜백\n  const handleConnect = customer => {\n    console.log('연결할 고객:', customer);\n    setSelectedCustomer(customer); // 선택된 고객 정보 저장\n\n    // 연결된 고객을 리스트에서 제거\n    setCustomers(prevCustomers => prevCustomers.filter(c => c.id !== customer.id));\n  };\n\n  // 연결 해제 시 실행될 콜백\n  const handleDisconnect = () => {\n    console.log('고객 연결 해제');\n    setSelectedCustomer(null); // 선택된 고객 정보 초기화\n  };\n\n  // 모달 상태 추가\n  const [isReportModalOpen, setReportModalOpen] = useState(false);\n\n  // Report 컴포넌트에서 호출할 새로고침 함수\n  const handleReportUpdate = () => {\n    setRefreshTrigger(prev => prev + 1); // 값을 변경하여 ReportsPanel의 useEffect 트리거\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${showLoginModal || showRegisterModal ? 'locked-ui' : ''}`,\n    children: [showLoginModal && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"global-lock-screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LoginModal, {\n        onClose: () => setShowLoginModal(false),\n        onLogin: handleLogin,\n        onSwitchToRegister: () => {\n          setShowLoginModal(false);\n          setShowRegisterModal(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showRegisterModal && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"global-lock-screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RegisterModal, {\n        onClose: () => setShowRegisterModal(false),\n        onSwitchToLogin: () => {\n          setShowRegisterModal(false);\n          setShowLoginModal(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        onOpenSettings: () => setSettingsOpen(true),\n        isLogin: isLogin,\n        userId: userId,\n        profileUrl: profileUrl,\n        onLoginClick: () => setShowLoginModal(true),\n        onLogout: handleLogout,\n        showProfilePopup: showProfilePopup,\n        setShowProfilePopup: setShowProfilePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), showProfilePopup && /*#__PURE__*/_jsxDEV(ProfilePopup, {\n        userId: userId,\n        profileUrl: profileUrl,\n        onClose: () => setShowProfilePopup(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"dashboard__left\",\n          children: /*#__PURE__*/_jsxDEV(StreamPanel, {\n            selectedCustomer: selectedCustomer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"dashboard__clock\",\n          children: /*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"dashboard__right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__topRow\",\n            children: [/*#__PURE__*/_jsxDEV(ReportCard, {\n              pendingCount: 3,\n              onWriteClick: () => setReportModalOpen(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(NotificationCard, {\n              notifications: [{\n                message: '배터리 경고: 15%',\n                time: '2m ago',\n                type: 'warning',\n                read: false\n              }, {\n                message: '원격조작 요청 #1234',\n                time: '5m ago',\n                type: 'info',\n                read: false\n              }],\n              onViewAll: () => console.log('View all notifications')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ReportsPanel, {\n            onSelectReport: report => setSelectedReport(report),\n            onRefreshNeeded: refreshTrigger\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__topic\",\n            children: /*#__PURE__*/_jsxDEV(TopicPanel, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__panels\",\n            children: [/*#__PURE__*/_jsxDEV(BatteryPanel, {\n              isConnected: !!selectedCustomer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SpeedPanel, {\n              isConnected: !!selectedCustomer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PlatformControlPanel, {\n              onDisconnect: handleDisconnect,\n              isConnected: !!selectedCustomer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__queue\",\n            children: /*#__PURE__*/_jsxDEV(CustomerQueueList, {\n              customers: customers,\n              onConnect: handleConnect,\n              isConnected: !!selectedCustomer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), isSettingsOpen && /*#__PURE__*/_jsxDEV(SettingsModal, {\n        onClose: () => setSettingsOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this), (isReportModalOpen || selectedReport) && /*#__PURE__*/_jsxDEV(ReportModal, {\n        isOpen: true,\n        onClose: () => {\n          setReportModalOpen(false);\n          setSelectedReport(null);\n        },\n        data: selectedReport,\n        onUpdate: handleReportUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"krCW11vktWCy7DsW2XXe3X3CpYQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navigation","SettingsModal","LoginModal","RegisterModal","ProfilePopup","Clock","CustomerQueueList","StreamPanel","TopicPanel","BatteryPanel","SpeedPanel","PlatformControlPanel","ReportModal","ReportCard","NotificationCard","ReportsPanel","axios","ROSLIB","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isSettingsOpen","setSettingsOpen","isLogin","setIsLogin","userId","setUserId","showLoginModal","setShowLoginModal","showRegisterModal","setShowRegisterModal","showProfilePopup","setShowProfilePopup","profileUrl","selectedReport","setSelectedReport","customers","setCustomers","selectedCustomer","setSelectedCustomer","refreshTrigger","setRefreshTrigger","ros","Ros","url","on","console","log","jsonTopic","Topic","name","messageType","subscribe","message","jsonData","JSON","parse","data","customerId","Date","now","prevCustomers","newCustomers","id","region","model","timestamp","slice","error","warn","close","token","localStorage","getItem","savedUserId","interceptor","interceptors","request","use","config","headers","Authorization","Promise","reject","eject","handleLogin","username","handleLogout","removeItem","handleConnect","customer","filter","c","handleDisconnect","isReportModalOpen","setReportModalOpen","handleReportUpdate","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onLogin","onSwitchToRegister","onSwitchToLogin","onOpenSettings","onLoginClick","onLogout","pendingCount","onWriteClick","notifications","time","type","read","onViewAll","onSelectReport","report","onRefreshNeeded","isConnected","onDisconnect","onConnect","isOpen","onUpdate","_c","$RefreshReg$"],"sources":["C:/git/Ui_design/react_design/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Navigation from './components/Navigation';\r\nimport SettingsModal from './components/SettingsModal';\r\nimport LoginModal from './components/LoginModal';\r\nimport RegisterModal from './components/RegisterModal';\r\nimport ProfilePopup from './components/ProfilePopup';\r\nimport Clock from './components/Clock';\r\nimport CustomerQueueList from './components/CustomerQueueList';\r\nimport StreamPanel from './components/StreamPanel';\r\nimport TopicPanel from './components/TopicPanel';\r\nimport BatteryPanel from './components/BatteryPanel';\r\nimport SpeedPanel from './components/SpeedPanel';\r\nimport PlatformControlPanel from './components/PlatformControlPanel';\r\nimport ReportModal from \"./components/Report\";\r\nimport ReportCard from './components/ReportCard';\r\nimport NotificationCard from './components/ReportsPanel';\r\nimport ReportsPanel from './components/ReportsPanel';\r\nimport axios from 'axios';\r\nimport ROSLIB from 'roslib';\r\n\r\nfunction App() {\r\n  const [isSettingsOpen, setSettingsOpen] = useState(false);\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [userId, setUserId] = useState('');\r\n  const [showLoginModal, setShowLoginModal] = useState(true);\r\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\r\n  const [showProfilePopup, setShowProfilePopup] = useState(false);\r\n  const profileUrl = \"/assets/images/sample_profile.png\";\r\n  const [selectedReport, setSelectedReport] = useState(null);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n  const [refreshTrigger, setRefreshTrigger] = useState(0);  // 새로고침 트리거용 state\r\n  \r\n  // ROS 연결 및 토픽 구독\r\n  useEffect(() => {\r\n    const ros = new ROSLIB.Ros({ url: 'ws://172.16.131.93:9090' });\r\n    \r\n    ros.on('connection', () => {\r\n      console.log('Connected to ROS websocket server.');\r\n      \r\n      // JSON 데이터 토픽 구독\r\n      const jsonTopic = new ROSLIB.Topic({\r\n        ros: ros,\r\n        name: '/json_data',\r\n        messageType: 'std_msgs/String'\r\n      });\r\n      \r\n      jsonTopic.subscribe((message) => {\r\n        try {\r\n          // 토픽에서 받은 JSON 문자열 파싱\r\n          const jsonData = JSON.parse(message.data);\r\n          console.log('Received JSON data:', jsonData);\r\n          \r\n          // 고유 ID 생성\r\n          const customerId = Date.now();\r\n          \r\n          // 새 고객 추가 (큐의 끝에 추가)\r\n          setCustomers(prevCustomers => {\r\n            const newCustomers = [\r\n              ...prevCustomers,\r\n              { \r\n                id: customerId,\r\n                name: jsonData.name,\r\n                region: jsonData.region,\r\n                model: jsonData.model,\r\n                timestamp: jsonData.timestamp,\r\n              }\r\n            ];\r\n            \r\n            // 최대 10명까지만 유지\r\n            return newCustomers.slice(-10);\r\n          });\r\n        } catch (error) {\r\n          console.error('Error parsing JSON data:', error);\r\n        }\r\n      });\r\n    });\r\n    \r\n    ros.on('error', (error) => {\r\n      console.error('Error connecting to ROS websocket server:', error);\r\n    });\r\n    \r\n    ros.on('close', () => {\r\n      console.warn('Connection to ROS websocket server closed.');\r\n    });\r\n    \r\n    return () => {\r\n      if (ros) {\r\n        ros.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 토큰 확인 및 자동 로그인\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const savedUserId = localStorage.getItem('user');\r\n    if (token && savedUserId) {\r\n      setIsLogin(true);\r\n      setUserId(savedUserId);\r\n      setShowLoginModal(false);\r\n    }\r\n  }, []);\r\n\r\n  // axios 인터셉터 설정\r\n  useEffect(() => {\r\n    const interceptor = axios.interceptors.request.use(\r\n      config => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n      },\r\n      error => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      axios.interceptors.request.eject(interceptor);\r\n    };\r\n  }, []);\r\n\r\n  const handleLogin = (username) => {\r\n    console.log('로그인 시도:', username);\r\n    setIsLogin(true);\r\n    setUserId(username);\r\n    setShowLoginModal(false);\r\n    console.log('로그인 상태:', { isLogin: true, userId: username });\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsLogin(false);\r\n    setUserId('');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('token_type');\r\n    localStorage.removeItem('user');\r\n    setShowLoginModal(true);\r\n  };\r\n\r\n  // 고객 연결 시 실행될 콜백\r\n  const handleConnect = (customer) => {\r\n    console.log('연결할 고객:', customer);\r\n    setSelectedCustomer(customer);  // 선택된 고객 정보 저장\r\n    \r\n    // 연결된 고객을 리스트에서 제거\r\n    setCustomers(prevCustomers => \r\n      prevCustomers.filter(c => c.id !== customer.id)\r\n    );\r\n  };\r\n\r\n  // 연결 해제 시 실행될 콜백\r\n  const handleDisconnect = () => {\r\n    console.log('고객 연결 해제');\r\n    setSelectedCustomer(null);  // 선택된 고객 정보 초기화\r\n  };\r\n\r\n  // 모달 상태 추가\r\n  const [isReportModalOpen, setReportModalOpen] = useState(false);\r\n\r\n  // Report 컴포넌트에서 호출할 새로고침 함수\r\n  const handleReportUpdate = () => {\r\n    setRefreshTrigger(prev => prev + 1);  // 값을 변경하여 ReportsPanel의 useEffect 트리거\r\n  };\r\n\r\n  return (\r\n    <div className={`App ${showLoginModal || showRegisterModal ? 'locked-ui' : ''}`}>\r\n      {/* 로그인/회원가입 모달 띄우기 (화면 잠금) */}\r\n      {showLoginModal && (\r\n        <>\r\n          <div className=\"global-lock-screen\" />\r\n          <LoginModal\r\n            onClose={() => setShowLoginModal(false)}\r\n            onLogin={handleLogin}\r\n            onSwitchToRegister={() => {\r\n              setShowLoginModal(false);\r\n              setShowRegisterModal(true);\r\n            }}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {showRegisterModal && (\r\n        <>\r\n          <div className=\"global-lock-screen\" />\r\n          <RegisterModal\r\n            onClose={() => setShowRegisterModal(false)}\r\n            onSwitchToLogin={() => {\r\n              setShowRegisterModal(false);\r\n              setShowLoginModal(true);\r\n            }}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {/* 로그인 상태라면 메인 UI 렌더링 */}\r\n      {isLogin && (\r\n        <>\r\n          <Navigation\r\n            onOpenSettings={() => setSettingsOpen(true)}\r\n            isLogin={isLogin}\r\n            userId={userId}\r\n            profileUrl={profileUrl}\r\n            onLoginClick={() => setShowLoginModal(true)}\r\n            onLogout={handleLogout}\r\n            showProfilePopup={showProfilePopup}\r\n            setShowProfilePopup={setShowProfilePopup}\r\n          />\r\n\r\n          {showProfilePopup && (\r\n            <ProfilePopup\r\n              userId={userId}\r\n              profileUrl={profileUrl}\r\n              onClose={() => setShowProfilePopup(false)}\r\n            />\r\n          )}\r\n\r\n          <main className=\"dashboard\">\r\n            <section className=\"dashboard__left\">\r\n              <StreamPanel selectedCustomer={selectedCustomer} />\r\n            </section>\r\n\r\n            <section className=\"dashboard__clock\">\r\n              <Clock />\r\n            </section>\r\n\r\n            <aside className=\"dashboard__right\">\r\n              <div className=\"dashboard__topRow\">\r\n                <ReportCard\r\n                  pendingCount={3}\r\n                  onWriteClick={() => setReportModalOpen(true)}\r\n                />\r\n                <NotificationCard\r\n                  notifications={[\r\n                    { message: '배터리 경고: 15%', time: '2m ago', type: 'warning', read: false },\r\n                    { message: '원격조작 요청 #1234', time: '5m ago', type: 'info', read: false },\r\n                  ]}\r\n                  onViewAll={() => console.log('View all notifications')}\r\n                />\r\n              </div>\r\n\r\n              <ReportsPanel\r\n                onSelectReport={(report) => setSelectedReport(report)}\r\n                onRefreshNeeded={refreshTrigger}\r\n              />\r\n\r\n              <div className=\"dashboard__topic\">\r\n                <TopicPanel />\r\n              </div>\r\n\r\n              <div className=\"dashboard__panels\">\r\n                <BatteryPanel isConnected={!!selectedCustomer} />\r\n                <SpeedPanel isConnected={!!selectedCustomer} />\r\n                <PlatformControlPanel onDisconnect={handleDisconnect} isConnected={!!selectedCustomer} />\r\n              </div>\r\n\r\n              <div className=\"dashboard__queue\">\r\n                <CustomerQueueList\r\n                  customers={customers}\r\n                  onConnect={handleConnect}\r\n                  isConnected={!!selectedCustomer}\r\n                />\r\n              </div>\r\n            </aside>\r\n          </main>\r\n\r\n          {isSettingsOpen && (\r\n            <SettingsModal onClose={() => setSettingsOpen(false)} />\r\n          )}\r\n\r\n          {(isReportModalOpen || selectedReport) && (\r\n            <ReportModal\r\n              isOpen={true}\r\n              onClose={() => {\r\n                setReportModalOpen(false);\r\n                setSelectedReport(null);\r\n              }}\r\n              data={selectedReport}\r\n              onUpdate={handleReportUpdate}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}