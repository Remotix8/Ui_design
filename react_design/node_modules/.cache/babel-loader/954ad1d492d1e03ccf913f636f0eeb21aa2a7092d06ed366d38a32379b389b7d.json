{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\Ui_design\\\\react_design\\\\src\\\\components\\\\RegisterModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LoginModal.css'; // 스타일 재사용\nimport logo from '../assets/images/logo.png';\nimport axios from 'axios';\n\n// API 기본 설정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://211.188.63.134:8000';\nfunction RegisterModal({\n  onClose,\n  onSwitchToLogin\n}) {\n  _s();\n  const [newId, setNewId] = useState('');\n  const [newPw, setNewPw] = useState('');\n  const [confirmPw, setConfirmPw] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleRegister = async () => {\n    if (newPw !== confirmPw) {\n      setError('비밀번호 확인이 일치하지 않습니다.');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    try {\n      const response = await axios.post(`${API_BASE_URL}/users/register`, {\n        email: newId,\n        password: newPw\n      });\n      if (response.data.success) {\n        alert('회원가입이 완료되었습니다.');\n        onSwitchToLogin();\n      }\n    } catch (err) {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        setError('이미 등록된 아이디입니다.');\n      } else {\n        var _err$response2, _err$response2$data;\n        setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || '회원가입에 실패했습니다.');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-modal\",\n      style: {\n        width: '380px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"login-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC2E0\\uADDC \\uC544\\uC774\\uB514\",\n        value: newId,\n        onChange: e => setNewId(e.target.value),\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uC2E0\\uADDC \\uBE44\\uBC00\\uBC88\\uD638\",\n        value: newPw,\n        onChange: e => setNewPw(e.target.value),\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        value: confirmPw,\n        onChange: e => setConfirmPw(e.target.value),\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        className: \"login-button\",\n        disabled: isLoading,\n        children: isLoading ? '회원가입 중...' : '회원가입'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onSwitchToLogin,\n        children: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterModal, \"TFMsmhyQoaVqFi2QJ4cd9XsCGMc=\");\n_c = RegisterModal;\nexport default RegisterModal;\nvar _c;\n$RefreshReg$(_c, \"RegisterModal\");","map":{"version":3,"names":["React","useState","logo","axios","jsxDEV","_jsxDEV","API_BASE_URL","RegisterModal","onClose","onSwitchToLogin","_s","newId","setNewId","newPw","setNewPw","confirmPw","setConfirmPw","error","setError","isLoading","setIsLoading","handleRegister","response","post","email","password","data","success","alert","err","_err$response","status","_err$response2","_err$response2$data","message","className","children","style","width","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/git/Ui_design/react_design/src/components/RegisterModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './LoginModal.css'; // 스타일 재사용\r\nimport logo from '../assets/images/logo.png';\r\nimport axios from 'axios';\r\n\r\n// API 기본 설정\r\nconst API_BASE_URL = 'http://211.188.63.134:8000';\r\n\r\nfunction RegisterModal({ onClose, onSwitchToLogin }) {\r\n  const [newId, setNewId] = useState('');\r\n  const [newPw, setNewPw] = useState('');\r\n  const [confirmPw, setConfirmPw] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleRegister = async () => {\r\n    if (newPw !== confirmPw) {\r\n      setError('비밀번호 확인이 일치하지 않습니다.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/users/register`, {\r\n        email: newId,\r\n        password: newPw\r\n      });\r\n\r\n      if (response.data.success) {\r\n        alert('회원가입이 완료되었습니다.');\r\n        onSwitchToLogin();\r\n      }\r\n    } catch (err) {\r\n      if (err.response?.status === 409) {\r\n        setError('이미 등록된 아이디입니다.');\r\n      } else {\r\n        setError(err.response?.data?.message || '회원가입에 실패했습니다.');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-modal-overlay\">\r\n      <div className=\"login-modal\" style={{ width: '380px' }}>\r\n        <img src={logo} alt=\"Logo\" className=\"login-logo\" />\r\n        <h2 className=\"login-title\">회원가입</h2>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"신규 아이디\"\r\n          value={newId}\r\n          onChange={(e) => setNewId(e.target.value)}\r\n          className=\"login-input\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"신규 비밀번호\"\r\n          value={newPw}\r\n          onChange={(e) => setNewPw(e.target.value)}\r\n          className=\"login-input\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"비밀번호 확인\"\r\n          value={confirmPw}\r\n          onChange={(e) => setConfirmPw(e.target.value)}\r\n          className=\"login-input\"\r\n        />\r\n\r\n        <button \r\n          onClick={handleRegister} \r\n          className=\"login-button\"\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? '회원가입 중...' : '회원가입'}\r\n        </button>\r\n        \r\n        <button className=\"close-button\" onClick={onSwitchToLogin}>로그인하기</button>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}