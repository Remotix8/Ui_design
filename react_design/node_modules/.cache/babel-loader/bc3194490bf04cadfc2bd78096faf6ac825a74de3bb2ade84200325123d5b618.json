{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\Ui_design\\\\react_design\\\\src\\\\components\\\\SpeedPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport ROSLIB from 'roslib';\nimport './SpeedPanel.css';\nimport { FaTachometerAlt } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeedPanel = ({\n  isConnected\n}) => {\n  _s();\n  const [speed, setSpeed] = useState('--');\n  const rosRef = useRef(null);\n  const cmdVelTopicRef = useRef(null);\n  useEffect(() => {\n    // 연결되지 않은 상태면 속도 값을 '--'로 설정\n    if (!isConnected) {\n      setSpeed('--');\n      return;\n    }\n\n    // ROS 웹소켓 연결 설정\n    rosRef.current = new ROSLIB.Ros({\n      url: 'ws://172.16.131.93:9090'\n    });\n\n    // 연결 상태 모니터링\n    rosRef.current.on('connection', () => {\n      console.log('SpeedPanel: Connected to websocket server');\n    });\n    rosRef.current.on('error', error => {\n      console.error('SpeedPanel: Error connecting to websocket server:', error);\n      setSpeed('--');\n    });\n    rosRef.current.on('close', () => {\n      console.log('SpeedPanel: Connection to websocket server closed');\n      setSpeed('--');\n    });\n\n    // cmd_vel 토픽 구독\n    cmdVelTopicRef.current = new ROSLIB.Topic({\n      ros: rosRef.current,\n      name: '/cmd_vel',\n      messageType: 'geometry_msgs/TwistStamped'\n    });\n\n    // 메시지 수신 시 속도 업데이트\n    cmdVelTopicRef.current.subscribe(message => {\n      if (isConnected) {\n        // 연결된 상태일 때만 속도 값 업데이트\n        // 선속도와 각속도의 절대값 중 큰 값을 표시\n        const linearSpeed = Math.abs(message.twist.linear.x);\n        const angularSpeed = Math.abs(message.twist.angular.z);\n        const currentSpeed = Math.max(linearSpeed, angularSpeed);\n        setSpeed(currentSpeed.toFixed(2));\n      }\n    });\n    return () => {\n      if (cmdVelTopicRef.current) {\n        cmdVelTopicRef.current.unsubscribe();\n      }\n      if (rosRef.current) {\n        rosRef.current.close();\n      }\n    };\n  }, [isConnected]); // isConnected를 의존성 배열에 추가\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speed-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"speed-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"speed-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"speed-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"speed-label\",\n            children: \"Speed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"speed-value\",\n            children: speed === '--' ? '--' : `${(speed * 250).toFixed(2)} m/s`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"speed-icon\",\n          children: /*#__PURE__*/_jsxDEV(FaTachometerAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeedPanel, \"kszSny98/NU54eSm7bsKu1kj5fA=\");\n_c = SpeedPanel;\nexport default SpeedPanel;\nvar _c;\n$RefreshReg$(_c, \"SpeedPanel\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ROSLIB","FaTachometerAlt","jsxDEV","_jsxDEV","SpeedPanel","isConnected","_s","speed","setSpeed","rosRef","cmdVelTopicRef","current","Ros","url","on","console","log","error","Topic","ros","name","messageType","subscribe","message","linearSpeed","Math","abs","twist","linear","x","angularSpeed","angular","z","currentSpeed","max","toFixed","unsubscribe","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/git/Ui_design/react_design/src/components/SpeedPanel.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport ROSLIB from 'roslib';\r\nimport './SpeedPanel.css';\r\nimport { FaTachometerAlt } from 'react-icons/fa';\r\n\r\nconst SpeedPanel = ({ isConnected }) => {\r\n  const [speed, setSpeed] = useState('--');\r\n  const rosRef = useRef(null);\r\n  const cmdVelTopicRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // 연결되지 않은 상태면 속도 값을 '--'로 설정\r\n    if (!isConnected) {\r\n      setSpeed('--');\r\n      return;\r\n    }\r\n\r\n    // ROS 웹소켓 연결 설정\r\n    rosRef.current = new ROSLIB.Ros({\r\n      url: 'ws://172.16.131.93:9090'\r\n    });\r\n\r\n    // 연결 상태 모니터링\r\n    rosRef.current.on('connection', () => {\r\n      console.log('SpeedPanel: Connected to websocket server');\r\n    });\r\n\r\n    rosRef.current.on('error', (error) => {\r\n      console.error('SpeedPanel: Error connecting to websocket server:', error);\r\n      setSpeed('--');\r\n    });\r\n\r\n    rosRef.current.on('close', () => {\r\n      console.log('SpeedPanel: Connection to websocket server closed');\r\n      setSpeed('--');\r\n    });\r\n\r\n    // cmd_vel 토픽 구독\r\n    cmdVelTopicRef.current = new ROSLIB.Topic({\r\n      ros: rosRef.current,\r\n      name: '/cmd_vel',\r\n      messageType: 'geometry_msgs/TwistStamped'\r\n    });\r\n\r\n    // 메시지 수신 시 속도 업데이트\r\n    cmdVelTopicRef.current.subscribe((message) => {\r\n      if (isConnected) {  // 연결된 상태일 때만 속도 값 업데이트\r\n        // 선속도와 각속도의 절대값 중 큰 값을 표시\r\n        const linearSpeed = Math.abs(message.twist.linear.x);\r\n        const angularSpeed = Math.abs(message.twist.angular.z);\r\n        const currentSpeed = Math.max(linearSpeed, angularSpeed);\r\n        setSpeed(currentSpeed.toFixed(2));\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      if (cmdVelTopicRef.current) {\r\n        cmdVelTopicRef.current.unsubscribe();\r\n      }\r\n      if (rosRef.current) {\r\n        rosRef.current.close();\r\n      }\r\n    };\r\n  }, [isConnected]);  // isConnected를 의존성 배열에 추가\r\n\r\n  return (\r\n    <div className=\"speed-container\">\r\n      <div className=\"speed-panel\">\r\n        <div className=\"speed-content\">\r\n          <div className=\"speed-info\">\r\n            <span className=\"speed-label\">Speed</span>\r\n            <div className=\"speed-value\">\r\n              {speed === '--' ? '--' : `${(speed * 250).toFixed(2)} m/s`}\r\n            </div>\r\n          </div>\r\n          <div className=\"speed-icon\">\r\n            <FaTachometerAlt />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeedPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}