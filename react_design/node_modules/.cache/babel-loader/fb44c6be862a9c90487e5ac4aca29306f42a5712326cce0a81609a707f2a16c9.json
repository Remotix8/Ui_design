{"ast":null,"code":"/**\r\n * Mixin a feature to the core/Ros prototype.\r\n * For example, mixin(Ros, ['Topic'], {Topic: <Topic>})\r\n * will add a topic bound to any Ros instances so a user\r\n * can call `var topic = ros.Topic({name: '/foo'});`\r\n *\r\n * @author Graeme Yeates - github.com/megawac\r\n */\nmodule.exports = function (Ros, classes, features) {\n  classes.forEach(function (className) {\n    var Class = features[className];\n    Ros.prototype[className] = function (options) {\n      options.ros = this;\n      return new Class(options);\n    };\n  });\n};","map":{"version":3,"names":["module","exports","Ros","classes","features","forEach","className","Class","prototype","options","ros"],"sources":["C:/git/Ui_design/react_design/node_modules/roslib/src/mixin.js"],"sourcesContent":["/**\r\n * Mixin a feature to the core/Ros prototype.\r\n * For example, mixin(Ros, ['Topic'], {Topic: <Topic>})\r\n * will add a topic bound to any Ros instances so a user\r\n * can call `var topic = ros.Topic({name: '/foo'});`\r\n *\r\n * @author Graeme Yeates - github.com/megawac\r\n */\r\nmodule.exports = function(Ros, classes, features) {\r\n    classes.forEach(function(className) {\r\n        var Class = features[className];\r\n        Ros.prototype[className] = function(options) {\r\n            options.ros = this;\r\n            return new Class(options);\r\n        };\r\n    });\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,UAASC,GAAG,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EAC9CD,OAAO,CAACE,OAAO,CAAC,UAASC,SAAS,EAAE;IAChC,IAAIC,KAAK,GAAGH,QAAQ,CAACE,SAAS,CAAC;IAC/BJ,GAAG,CAACM,SAAS,CAACF,SAAS,CAAC,GAAG,UAASG,OAAO,EAAE;MACzCA,OAAO,CAACC,GAAG,GAAG,IAAI;MAClB,OAAO,IAAIH,KAAK,CAACE,OAAO,CAAC;IAC7B,CAAC;EACL,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}