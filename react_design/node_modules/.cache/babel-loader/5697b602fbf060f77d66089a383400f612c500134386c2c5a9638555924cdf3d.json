{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\Ui_design\\\\react_design\\\\src\\\\components\\\\LoginModal.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./LoginModal.css\";\nimport logo from '../assets/images/logo.png';\nimport axios from 'axios';\n\n// axios 기본 설정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:8000';\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nfunction LoginModal({\n  onClose,\n  onLogin,\n  onSwitchToRegister\n}) {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleLogin = async () => {\n    if (!id || !pw) {\n      setError(\"아이디와 비밀번호를 모두 입력해주세요.\");\n      return;\n    }\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const loginData = {\n        email: id,\n        password: pw\n      };\n      console.log('로그인 시도:', JSON.stringify(loginData, null, 2));\n      const response = await axios.post('/login', loginData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        timeout: 10000\n      });\n      console.log('서버 응답:', JSON.stringify(response.data, null, 2));\n      if (response.data.access_token) {\n        // 토큰과 사용자 정보 저장\n        localStorage.setItem('token', response.data.access_token);\n        localStorage.setItem('token_type', response.data.token_type);\n        localStorage.setItem('user', id);\n\n        // 로그인 상태 업데이트 및 모달 닫기\n        onLogin(id);\n        onClose();\n      } else {\n        setError(response.data.message || '로그인에 실패했습니다.');\n      }\n    } catch (err) {\n      console.error('로그인 에러:', err.message);\n      if (err.code === 'ECONNABORTED') {\n        setError('서버 응답 시간이 초과되었습니다. 다시 시도해주세요.');\n      } else if (err.response) {\n        var _err$response$data, _err$response$data2;\n        // 서버가 응답을 반환했지만 에러 상태인 경우\n        console.error('서버 에러 응답:', JSON.stringify(err.response.data, null, 2));\n        setError(((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || ((_err$response$data2 = err.response.data) === null || _err$response$data2 === void 0 ? void 0 : _err$response$data2.detail) || '로그인에 실패했습니다.');\n      } else if (err.request) {\n        // 요청은 보냈지만 응답을 받지 못한 경우\n        console.error('응답 없음:', err.message);\n        setError('서버에 연결할 수 없습니다. 서버가 실행 중인지 확인해주세요.');\n      } else {\n        // 요청 설정 중 에러가 발생한 경우\n        console.error('요청 설정 에러:', err.message);\n        setError('로그인 요청 중 오류가 발생했습니다.');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 자동 로그인 체크\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      onLogin(user);\n      onClose();\n    }\n  }, [onLogin, onClose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"login-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"\\uC774\\uBA54\\uC77C\",\n        value: id,\n        onChange: e => setId(e.target.value),\n        className: \"login-input\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        value: pw,\n        onChange: e => setPw(e.target.value),\n        className: \"login-input\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        onClick: handleLogin,\n        disabled: isLoading,\n        children: isLoading ? '로그인 중...' : '로그인'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signup-link\",\n        onClick: onSwitchToRegister,\n        style: {\n          pointerEvents: isLoading ? 'none' : 'auto'\n        },\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginModal, \"yooIPYSPzFoDkTXlPjJX2aUYmfI=\");\n_c = LoginModal;\nexport default LoginModal;\nvar _c;\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"names":["useState","useEffect","logo","axios","jsxDEV","_jsxDEV","defaults","baseURL","headers","common","post","LoginModal","onClose","onLogin","onSwitchToRegister","_s","id","setId","pw","setPw","error","setError","isLoading","setIsLoading","handleLogin","loginData","email","password","console","log","JSON","stringify","response","timeout","data","access_token","localStorage","setItem","token_type","message","err","code","_err$response$data","_err$response$data2","detail","request","token","getItem","user","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","disabled","onClick","style","pointerEvents","_c","$RefreshReg$"],"sources":["C:/git/Ui_design/react_design/src/components/LoginModal.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./LoginModal.css\";\r\nimport logo from '../assets/images/logo.png';\r\nimport axios from 'axios';\r\n\r\n// axios 기본 설정\r\naxios.defaults.baseURL = 'http://localhost:8000';\r\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\nfunction LoginModal({ onClose, onLogin, onSwitchToRegister }) {\r\n  const [id, setId] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleLogin = async () => {\r\n    if (!id || !pw) {\r\n      setError(\"아이디와 비밀번호를 모두 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n    \r\n    try {\r\n      const loginData = {\r\n        email: id,\r\n        password: pw\r\n      };\r\n      \r\n      console.log('로그인 시도:', JSON.stringify(loginData, null, 2));\r\n\r\n      const response = await axios.post('/login', loginData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        },\r\n        timeout: 10000\r\n      });\r\n\r\n      console.log('서버 응답:', JSON.stringify(response.data, null, 2));\r\n\r\n      if (response.data.access_token) {\r\n        // 토큰과 사용자 정보 저장\r\n        localStorage.setItem('token', response.data.access_token);\r\n        localStorage.setItem('token_type', response.data.token_type);\r\n        localStorage.setItem('user', id);\r\n        \r\n        // 로그인 상태 업데이트 및 모달 닫기\r\n        onLogin(id);\r\n        onClose();\r\n      } else {\r\n        setError(response.data.message || '로그인에 실패했습니다.');\r\n      }\r\n    } catch (err) {\r\n      console.error('로그인 에러:', err.message);\r\n      if (err.code === 'ECONNABORTED') {\r\n        setError('서버 응답 시간이 초과되었습니다. 다시 시도해주세요.');\r\n      } else if (err.response) {\r\n        // 서버가 응답을 반환했지만 에러 상태인 경우\r\n        console.error('서버 에러 응답:', JSON.stringify(err.response.data, null, 2));\r\n        setError(err.response.data?.message || err.response.data?.detail || '로그인에 실패했습니다.');\r\n      } else if (err.request) {\r\n        // 요청은 보냈지만 응답을 받지 못한 경우\r\n        console.error('응답 없음:', err.message);\r\n        setError('서버에 연결할 수 없습니다. 서버가 실행 중인지 확인해주세요.');\r\n      } else {\r\n        // 요청 설정 중 에러가 발생한 경우\r\n        console.error('요청 설정 에러:', err.message);\r\n        setError('로그인 요청 중 오류가 발생했습니다.');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // 자동 로그인 체크\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n    if (token && user) {\r\n      onLogin(user);\r\n      onClose();\r\n    }\r\n  }, [onLogin, onClose]);\r\n\r\n  return (\r\n    <div className=\"login-modal-overlay\">\r\n      <div className=\"login-modal\">\r\n        <img src={logo} alt=\"Logo\" className=\"login-logo\" />\r\n        <h2 className=\"login-title\">로그인</h2>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"이메일\"\r\n          value={id}\r\n          onChange={(e) => setId(e.target.value)}\r\n          className=\"login-input\"\r\n          disabled={isLoading}\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          value={pw}\r\n          onChange={(e) => setPw(e.target.value)}\r\n          className=\"login-input\"\r\n          disabled={isLoading}\r\n        />\r\n\r\n        <button \r\n          className=\"login-button\" \r\n          onClick={handleLogin}\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? '로그인 중...' : '로그인'}\r\n        </button>\r\n\r\n        <p\r\n          className=\"signup-link\"\r\n          onClick={onSwitchToRegister}\r\n          style={{ pointerEvents: isLoading ? 'none' : 'auto' }}\r\n        >\r\n          회원가입\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}