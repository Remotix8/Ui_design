{"ast":null,"code":"import _objectSpread from\"/root/web_interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import'./PlatformControlPanel.css';import FloatingArrowControls from'./FloatingArrowControls';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PlatformControlPanel=()=>{const[teleopMode,setTeleopMode]=useState(false);const[activeButtons,setActiveButtons]=useState({up:false,down:false,left:false,right:false});useEffect(()=>{const handleKeyDown=e=>{if(!teleopMode)return;switch(e.key){case'ArrowUp':e.preventDefault();setActiveButtons(prev=>_objectSpread(_objectSpread({},prev),{},{up:true}));// TODO: Send platform forward command\nbreak;case'ArrowDown':e.preventDefault();setActiveButtons(prev=>_objectSpread(_objectSpread({},prev),{},{down:true}));// TODO: Send platform backward command\nbreak;case'ArrowLeft':e.preventDefault();setActiveButtons(prev=>_objectSpread(_objectSpread({},prev),{},{left:true}));// TODO: Send platform left turn command\nbreak;case'ArrowRight':e.preventDefault();setActiveButtons(prev=>_objectSpread(_objectSpread({},prev),{},{right:true}));// TODO: Send platform right turn command\nbreak;default:break;}};const handleKeyUp=e=>{if(!teleopMode)return;switch(e.key){case'ArrowUp':setActiveButtons(prev=>_objectSpread(_objectSpread({},prev),{},{up:false}));// TODO: Stop forward movement\nbreak;case'ArrowDown':setActiveButtons(prev=>_objectSpread(_objectSpread({},prev),{},{down:false}));// TODO: Stop backward movement\nbreak;case'ArrowLeft':setActiveButtons(prev=>_objectSpread(_objectSpread({},prev),{},{left:false}));// TODO: Stop left turn\nbreak;case'ArrowRight':setActiveButtons(prev=>_objectSpread(_objectSpread({},prev),{},{right:false}));// TODO: Stop right turn\nbreak;default:break;}};window.addEventListener('keydown',handleKeyDown);window.addEventListener('keyup',handleKeyUp);return()=>{window.removeEventListener('keydown',handleKeyDown);window.removeEventListener('keyup',handleKeyUp);};},[teleopMode]);const handleMouseDown=direction=>{if(!teleopMode)return;setActiveButtons(prev=>_objectSpread(_objectSpread({},prev),{},{[direction]:true}));// TODO: Send corresponding platform command\n};const handleMouseUp=direction=>{if(!teleopMode)return;setActiveButtons(prev=>_objectSpread(_objectSpread({},prev),{},{[direction]:false}));// TODO: Stop corresponding platform movement\n};const handleEmergencyStop=()=>{// TODO: Implement emergency stop logic\nsetTeleopMode(false);setActiveButtons({up:false,down:false,left:false,right:false});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"platform-control-panel\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"panel-title\",children:\"Platform Control\"}),/*#__PURE__*/_jsx(\"div\",{className:\"control-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mode-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toggle-container\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"toggle-label\",children:[\"Teleop \",teleopMode?'ON':'OFF']}),/*#__PURE__*/_jsxs(\"label\",{className:\"toggle-switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:teleopMode,onChange:e=>setTeleopMode(e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{className:\"toggle-slider\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"emergency-stop\",onClick:handleEmergencyStop,children:\"E-STOP\"})]})})]}),/*#__PURE__*/_jsx(FloatingArrowControls,{teleopMode:teleopMode,activeButtons:activeButtons,onMouseDown:handleMouseDown,onMouseUp:handleMouseUp})]});};export default PlatformControlPanel;","map":{"version":3,"names":["React","useState","useEffect","FloatingArrowControls","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PlatformControlPanel","teleopMode","setTeleopMode","activeButtons","setActiveButtons","up","down","left","right","handleKeyDown","e","key","preventDefault","prev","_objectSpread","handleKeyUp","window","addEventListener","removeEventListener","handleMouseDown","direction","handleMouseUp","handleEmergencyStop","children","className","type","checked","onChange","target","onClick","onMouseDown","onMouseUp"],"sources":["/root/web_interface/src/components/PlatformControlPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PlatformControlPanel.css';\nimport FloatingArrowControls from './FloatingArrowControls';\n\nconst PlatformControlPanel = () => {\n  const [teleopMode, setTeleopMode] = useState(false);\n  const [activeButtons, setActiveButtons] = useState({\n    up: false,\n    down: false,\n    left: false,\n    right: false\n  });\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (!teleopMode) return;\n\n      switch (e.key) {\n        case 'ArrowUp':\n          e.preventDefault();\n          setActiveButtons(prev => ({ ...prev, up: true }));\n          // TODO: Send platform forward command\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          setActiveButtons(prev => ({ ...prev, down: true }));\n          // TODO: Send platform backward command\n          break;\n        case 'ArrowLeft':\n          e.preventDefault();\n          setActiveButtons(prev => ({ ...prev, left: true }));\n          // TODO: Send platform left turn command\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          setActiveButtons(prev => ({ ...prev, right: true }));\n          // TODO: Send platform right turn command\n          break;\n        default:\n          break;\n      }\n    };\n\n    const handleKeyUp = (e) => {\n      if (!teleopMode) return;\n\n      switch (e.key) {\n        case 'ArrowUp':\n          setActiveButtons(prev => ({ ...prev, up: false }));\n          // TODO: Stop forward movement\n          break;\n        case 'ArrowDown':\n          setActiveButtons(prev => ({ ...prev, down: false }));\n          // TODO: Stop backward movement\n          break;\n        case 'ArrowLeft':\n          setActiveButtons(prev => ({ ...prev, left: false }));\n          // TODO: Stop left turn\n          break;\n        case 'ArrowRight':\n          setActiveButtons(prev => ({ ...prev, right: false }));\n          // TODO: Stop right turn\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [teleopMode]);\n\n  const handleMouseDown = (direction) => {\n    if (!teleopMode) return;\n    setActiveButtons(prev => ({ ...prev, [direction]: true }));\n    // TODO: Send corresponding platform command\n  };\n\n  const handleMouseUp = (direction) => {\n    if (!teleopMode) return;\n    setActiveButtons(prev => ({ ...prev, [direction]: false }));\n    // TODO: Stop corresponding platform movement\n  };\n\n  const handleEmergencyStop = () => {\n    // TODO: Implement emergency stop logic\n    setTeleopMode(false);\n    setActiveButtons({\n      up: false,\n      down: false,\n      left: false,\n      right: false\n    });\n  };\n\n  return (\n    <>\n      <div className=\"platform-control-panel\">\n        <h2 className=\"panel-title\">Platform Control</h2>\n        <div className=\"control-container\">\n          <div className=\"mode-controls\">\n            <div className=\"toggle-container\">\n              <span className=\"toggle-label\">Teleop {teleopMode ? 'ON' : 'OFF'}</span>\n              <label className=\"toggle-switch\">\n                <input\n                  type=\"checkbox\"\n                  checked={teleopMode}\n                  onChange={(e) => setTeleopMode(e.target.checked)}\n                />\n                <span className=\"toggle-slider\"></span>\n              </label>\n            </div>\n            <button\n              className=\"emergency-stop\"\n              onClick={handleEmergencyStop}\n            >\n              E-STOP\n            </button>\n          </div>\n        </div>\n      </div>\n      <FloatingArrowControls\n        teleopMode={teleopMode}\n        activeButtons={activeButtons}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n      />\n    </>\n  );\n};\n\nexport default PlatformControlPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}