{"ast":null,"code":"/**\r\n * @fileOverview\r\n * @author Russell Toris - rctoris@wpi.edu\r\n */\n\nvar Message = require('../core/Message');\nvar EventEmitter2 = require('eventemitter2').EventEmitter2;\n\n/**\r\n * An actionlib goal that is associated with an action server.\r\n *\r\n * Emits the following events:\r\n *  * 'timeout' - If a timeout occurred while sending a goal.\r\n *\r\n * @constructor\r\n * @param {Object} options\r\n * @param {ActionClient} options.actionClient - The ROSLIB.ActionClient to use with this goal.\r\n * @param {Object} options.goalMessage - The JSON object containing the goal for the action server.\r\n */\nfunction Goal(options) {\n  var that = this;\n  this.actionClient = options.actionClient;\n  this.goalMessage = options.goalMessage;\n  this.isFinished = false;\n\n  // Used to create random IDs\n  var date = new Date();\n\n  // Create a random ID\n  this.goalID = 'goal_' + Math.random() + '_' + date.getTime();\n  // Fill in the goal message\n  this.goalMessage = new Message({\n    goal_id: {\n      stamp: {\n        secs: 0,\n        nsecs: 0\n      },\n      id: this.goalID\n    },\n    goal: this.goalMessage\n  });\n  this.on('status', function (status) {\n    that.status = status;\n  });\n  this.on('result', function (result) {\n    that.isFinished = true;\n    that.result = result;\n  });\n  this.on('feedback', function (feedback) {\n    that.feedback = feedback;\n  });\n\n  // Add the goal\n  this.actionClient.goals[this.goalID] = this;\n}\nGoal.prototype.__proto__ = EventEmitter2.prototype;\n\n/**\r\n * Send the goal to the action server.\r\n *\r\n * @param {number} [timeout] - A timeout length for the goal's result.\r\n */\nGoal.prototype.send = function (timeout) {\n  var that = this;\n  that.actionClient.goalTopic.publish(that.goalMessage);\n  if (timeout) {\n    setTimeout(function () {\n      if (!that.isFinished) {\n        that.emit('timeout');\n      }\n    }, timeout);\n  }\n};\n\n/**\r\n * Cancel the current goal.\r\n */\nGoal.prototype.cancel = function () {\n  var cancelMessage = new Message({\n    id: this.goalID\n  });\n  this.actionClient.cancelTopic.publish(cancelMessage);\n};\nmodule.exports = Goal;","map":{"version":3,"names":["Message","require","EventEmitter2","Goal","options","that","actionClient","goalMessage","isFinished","date","Date","goalID","Math","random","getTime","goal_id","stamp","secs","nsecs","id","goal","on","status","result","feedback","goals","prototype","__proto__","send","timeout","goalTopic","publish","setTimeout","emit","cancel","cancelMessage","cancelTopic","module","exports"],"sources":["C:/git/Ui_design/react_design/node_modules/roslib/src/actionlib/Goal.js"],"sourcesContent":["/**\r\n * @fileOverview\r\n * @author Russell Toris - rctoris@wpi.edu\r\n */\r\n\r\nvar Message = require('../core/Message');\r\nvar EventEmitter2 = require('eventemitter2').EventEmitter2;\r\n\r\n/**\r\n * An actionlib goal that is associated with an action server.\r\n *\r\n * Emits the following events:\r\n *  * 'timeout' - If a timeout occurred while sending a goal.\r\n *\r\n * @constructor\r\n * @param {Object} options\r\n * @param {ActionClient} options.actionClient - The ROSLIB.ActionClient to use with this goal.\r\n * @param {Object} options.goalMessage - The JSON object containing the goal for the action server.\r\n */\r\nfunction Goal(options) {\r\n  var that = this;\r\n  this.actionClient = options.actionClient;\r\n  this.goalMessage = options.goalMessage;\r\n  this.isFinished = false;\r\n\r\n  // Used to create random IDs\r\n  var date = new Date();\r\n\r\n  // Create a random ID\r\n  this.goalID = 'goal_' + Math.random() + '_' + date.getTime();\r\n  // Fill in the goal message\r\n  this.goalMessage = new Message({\r\n    goal_id : {\r\n      stamp : {\r\n        secs : 0,\r\n        nsecs : 0\r\n      },\r\n      id : this.goalID\r\n    },\r\n    goal : this.goalMessage\r\n  });\r\n\r\n  this.on('status', function(status) {\r\n    that.status = status;\r\n  });\r\n\r\n  this.on('result', function(result) {\r\n    that.isFinished = true;\r\n    that.result = result;\r\n  });\r\n\r\n  this.on('feedback', function(feedback) {\r\n    that.feedback = feedback;\r\n  });\r\n\r\n  // Add the goal\r\n  this.actionClient.goals[this.goalID] = this;\r\n}\r\n\r\nGoal.prototype.__proto__ = EventEmitter2.prototype;\r\n\r\n/**\r\n * Send the goal to the action server.\r\n *\r\n * @param {number} [timeout] - A timeout length for the goal's result.\r\n */\r\nGoal.prototype.send = function(timeout) {\r\n  var that = this;\r\n  that.actionClient.goalTopic.publish(that.goalMessage);\r\n  if (timeout) {\r\n    setTimeout(function() {\r\n      if (!that.isFinished) {\r\n        that.emit('timeout');\r\n      }\r\n    }, timeout);\r\n  }\r\n};\r\n\r\n/**\r\n * Cancel the current goal.\r\n */\r\nGoal.prototype.cancel = function() {\r\n  var cancelMessage = new Message({\r\n    id : this.goalID\r\n  });\r\n  this.actionClient.cancelTopic.publish(cancelMessage);\r\n};\r\n\r\nmodule.exports = Goal;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AACxC,IAAIC,aAAa,GAAGD,OAAO,CAAC,eAAe,CAAC,CAACC,aAAa;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,IAAIA,CAACC,OAAO,EAAE;EACrB,IAAIC,IAAI,GAAG,IAAI;EACf,IAAI,CAACC,YAAY,GAAGF,OAAO,CAACE,YAAY;EACxC,IAAI,CAACC,WAAW,GAAGH,OAAO,CAACG,WAAW;EACtC,IAAI,CAACC,UAAU,GAAG,KAAK;;EAEvB;EACA,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;;EAErB;EACA,IAAI,CAACC,MAAM,GAAG,OAAO,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAGJ,IAAI,CAACK,OAAO,CAAC,CAAC;EAC5D;EACA,IAAI,CAACP,WAAW,GAAG,IAAIP,OAAO,CAAC;IAC7Be,OAAO,EAAG;MACRC,KAAK,EAAG;QACNC,IAAI,EAAG,CAAC;QACRC,KAAK,EAAG;MACV,CAAC;MACDC,EAAE,EAAG,IAAI,CAACR;IACZ,CAAC;IACDS,IAAI,EAAG,IAAI,CAACb;EACd,CAAC,CAAC;EAEF,IAAI,CAACc,EAAE,CAAC,QAAQ,EAAE,UAASC,MAAM,EAAE;IACjCjB,IAAI,CAACiB,MAAM,GAAGA,MAAM;EACtB,CAAC,CAAC;EAEF,IAAI,CAACD,EAAE,CAAC,QAAQ,EAAE,UAASE,MAAM,EAAE;IACjClB,IAAI,CAACG,UAAU,GAAG,IAAI;IACtBH,IAAI,CAACkB,MAAM,GAAGA,MAAM;EACtB,CAAC,CAAC;EAEF,IAAI,CAACF,EAAE,CAAC,UAAU,EAAE,UAASG,QAAQ,EAAE;IACrCnB,IAAI,CAACmB,QAAQ,GAAGA,QAAQ;EAC1B,CAAC,CAAC;;EAEF;EACA,IAAI,CAAClB,YAAY,CAACmB,KAAK,CAAC,IAAI,CAACd,MAAM,CAAC,GAAG,IAAI;AAC7C;AAEAR,IAAI,CAACuB,SAAS,CAACC,SAAS,GAAGzB,aAAa,CAACwB,SAAS;;AAElD;AACA;AACA;AACA;AACA;AACAvB,IAAI,CAACuB,SAAS,CAACE,IAAI,GAAG,UAASC,OAAO,EAAE;EACtC,IAAIxB,IAAI,GAAG,IAAI;EACfA,IAAI,CAACC,YAAY,CAACwB,SAAS,CAACC,OAAO,CAAC1B,IAAI,CAACE,WAAW,CAAC;EACrD,IAAIsB,OAAO,EAAE;IACXG,UAAU,CAAC,YAAW;MACpB,IAAI,CAAC3B,IAAI,CAACG,UAAU,EAAE;QACpBH,IAAI,CAAC4B,IAAI,CAAC,SAAS,CAAC;MACtB;IACF,CAAC,EAAEJ,OAAO,CAAC;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA1B,IAAI,CAACuB,SAAS,CAACQ,MAAM,GAAG,YAAW;EACjC,IAAIC,aAAa,GAAG,IAAInC,OAAO,CAAC;IAC9BmB,EAAE,EAAG,IAAI,CAACR;EACZ,CAAC,CAAC;EACF,IAAI,CAACL,YAAY,CAAC8B,WAAW,CAACL,OAAO,CAACI,aAAa,CAAC;AACtD,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGnC,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}